{% extends 'layout.html.twig' %}
{% import 'macros/breadcrumb.html.twig' as breadCrumb %}

{% block content %}
    {% for flash_message in app.session.flashBag.get('success') %}
        <div class="alert alert-success">
            {{ flash_message }}
        </div>
    {% endfor %}
{{ breadCrumb.create(category, lesson) }}

<div class="row lesson-wrapper"
     id="lesson-wrapper"
     data-lesson-id="{{ lesson.id }}"
     data-update-users-progress-url="{{ path("user_update_progress") }}"
>
    <div class="col-md-9">
        {% for sentence in lesson.sentences %} {# loop.index starts from 1 #}
            <div class="row">
                <div class="col-xs-2 col-sm-1 col-md-1">
                    <button class="btn btn-default js-btn-play" onclick="toggleAudio({{ loop.index }})" type="button">
                        <i class="glyphicon glyphicon-volume-up"></i>
                    </button>
                    <audio class="hidden" id="audio{{ loop.index }}">
                        <source src="{{ asset('/assets/mp3/'~category.slug~'/'~lesson.position~'/'~loop.index~'.mp3') }}">
                    </audio>
                </div>

                <div class="col-xs-7 col-sm-9 col-md-10">
                    <div class="form-group">
                        <input class="form-control input" id="input{{ loop.index }}" placeholder="{{ loop.index }}." onkeydown="handleInputOnKeyDown({{ loop.index }}, event)" tabindex="{{ loop.index }}">
                        <p class="text-left hidden" id="answer{{ loop.index }}">{{ sentence }}</p>
                        <p class="text-left result" id="result{{ loop.index }}"></p>
                    </div>
                </div>

                <div class="col-xs-2 col-sm-1 col-md-1">
                    <button class="btn btn-default" id="btn-check{{ loop.index }}" onclick="checkAnswer({{ loop.index }})" type="button">
                        <i class="glyphicon glyphicon-question-sign text-mute"></i>
                    </button>
                </div>
            </div>
        {% endfor %}
    </div>

    <div class="col-md-3">
        <div class="sticky-sidebar-wrapper">
            <div class="row" data-spy="affix" data-offset-top="105">
                <div class="col-xs-12 hidden form-group">
                    <button
                            id="js-update-progress-btn"
                            class="btn btn-lg btn-success btn-block js-update-progress-btn"
                            {% if not app.user %}data-toggle="modal" data-target="#authModal"{% endif %}
                    >
                        <i class="glyphicon glyphicon-paperclip" ></i>
                        Tạm lưu làm sau
                    </button>
                </div>
            </div>
        </div>

        {{ breadCrumb.create(category, lesson, 'hidden-md hidden-lg') }}

        <div class="row">
            <div class="col-xs-12">
                <h4>Helpful links</h4>
                <ul>
                    <li><a href="#">Hoc tieng anh</a></li>
                    <li><a href="#">Hoc tieng anh</a></li>
                    <li><a href="#">Hoc tieng anh</a></li>
                    <li><a href="#">Hoc tieng anh</a></li>
                    <li><a href="#">Hoc tieng anh</a></li>
                </ul>
            </div>
        </div>
    </div>
</div>

{{ breadCrumb.create(category, lesson, 'hidden-sm hidden-xs') }}

{% if not app.user %}
    <div id="authModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body hidden" id="js-modal-body-login"></div>
                <div class="modal-body" id="js-modal-body-register"></div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
{% endif %}

{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script>
        function submitLessonForm() {
            $.ajax({
                url: {{ path("user_update_progress") }},
                method: 'post',
                data: getUserAnswersData()
            }).then(function (data) {
                console.log('it works');
                console.log(data);
            });
        }

        function getUserAnswersData() {
            var data = {
                lessonId: $('#lesson-wrapper').data('lesson-id')
            };

            if (!isLessonDone()) {
                data.doneSentences = getDoneSentences();
            }

            return data;
        }

        function getDoneSentences() {
            var sentences = [];

            $('.done').each(function () {
                sentences.push($(this).attr('tabindex'));
            });

            return sentences;
        }

        function isLessonDone() {
            return $('.input.done').length < $('.input').length;
        }

        function showLoginForm() {
            var $form = $('#js-modal-body-login');

            if ($form.is(':empty')) {
                $.ajax({
                    url: "{{ path('fos_user_security_login') }}"
                }).then(function (data) {
                    $form.html(data);
                });
            }

            toggleAuthForms($form);
        }

        function showRegistrationForm() {
            var $form = $('#js-modal-body-register');

            if ($form.is(':empty')) {
                $.ajax({
                    url: "{{ path('fos_user_registration_register') }}",
                    method: 'get'
                }).then(function (data) {
                    $form.html(data);
                });
            }

            toggleAuthForms($form);
        }

        function toggleAuthForms($form) {
            var $authFormWrapper = $('#authModal');
            $authFormWrapper.find('.modal-body').addClass('hidden');

            $form.removeClass('hidden');
        }

        function toggleAudio(index) {
            var audioElements = document.getElementsByTagName('audio');
            var currentAudio = document.getElementById('audio'+index);

            {# if there's another audio playing, stop it. #}
            for (var i = 0; i < audioElements.length; i++) {
                if (audioElements[i] != currentAudio && !audioElements[i].paused) {
                    audioElements[i].pause();
                    break;
                }
            }

            currentAudio.paused ? currentAudio.play() : currentAudio.pause();
        }

        function checkAnswer(index) {
            var $inputElement = $('#input'+index);
            var $answerElement = $('#answer'+index);

            // if the sentence is already done
            if ($inputElement.hasClass('done')) {
                $inputElement.val($answerElement.html());
                return;
            }

            var resultContent = compareAnswers($inputElement, $answerElement);
            var $resultElement = $("#result"+index);

            var $btnCheck = $('#btn-check'+index);

            // if user's answer is not correct
            if (resultContent.indexOf('text-danger') !== -1) {
                $btnCheck.html('<b class="glyphicon glyphicon-remove text-danger"></b>');
                $resultElement.html(resultContent);
            } else {
                $btnCheck.html('<b class="glyphicon glyphicon-ok text-success"></b>');
                $resultElement.html('');
                $inputElement.val($answerElement.html()).addClass('done');
            }
        }

        function compareAnswers($inputElement, $answerElement) {
            var input = $inputElement.val().trim().toLowerCase().replace(/[^\w\s-]*/g, '').replace(/  /g, ' ').split(" ");
            var answer = $answerElement.html().trim().toLowerCase().replace(/[^\w\s-]*/g, '').replace(/  /g, ' ').split(" ");
            var result = $answerElement.html().split(' '); // the result after comparing input and answer

            for (var i = 0; i < result.length; i++) {
                if (answer[i] != input[i]){
                    result[i] = "<span class='text-danger'>"+result[i]+"</span>";
                }
            }

            if (input.length > answer.length) {
                result[result.length - 1] = "<span class='text-danger'>"+result[result.length - 1]+"</span>";
            }

            return result.join(" ");
        }

        function handleInputOnKeyDown(index, event) {
            {# Ctrl + Space = toggleAudio() #}
            if (event.ctrlKey && event.keyCode == 32) {
                toggleAudio(index);
            }

            {# Enter = Compare input & answer #}
            else if (event.keyCode == 13) {
                checkAnswer(index);
            }

            {# Ctrl + Enter = Hide result #}
            else if (event.ctrlKey && event.keyCode == 13) {
                document.getElementById('result'+index).style.display = 'none';
            }

           {# Down arrow key = next sentence || Up arrow key = previous sentence #}
            else if (event.keyCode== 40 || event.keyCode==38) {
                var inputs = document.querySelectorAll('[tabindex]');
                var currentInputIndex = document.activeElement.getAttribute('tabindex');

                {# Down arrow key = focus next input #}
                if (event.keyCode == 40) {
                    var nextInput = inputs[currentInputIndex];
                    if(nextInput != undefined) {
                        nextInput.focus();
                    }
                }

                {# Up arrow key = focus previous input #}
                else {
                    var previousInputIndex = parseInt(currentInputIndex)-2;
                    var previousInput = inputs[previousInputIndex];
                    if (previousInput != undefined) {
                        previousInput.focus();
                    }
                }
            }
        }

        function mapErrorsToForm($form, errors) {
            var html = '';

            $.each(errors, function (field, message) {
                if (typeof message === 'object') {
                    $.each(message, function (childField, childMessage) {
                        message = childMessage;
                    })
                }
                html += '<div class=\"alert alert-danger\">'+message+'</div>';
            });

            $form.find('.js-modal-form-error').html(html);
        }

        function isUserLoggedIn() {
            return $.ajax({
                url: "{{ path("user_show") }}"
            });
        }
    </script>

    <script>
        $(document).ready(function(){
            $("html,body").animate({scrollTop: 0}, 100);

            $(".input").focus(function(){
                $("html, body").animate({scrollTop: $(this).offset().top - 100});
            });

            $('#js-update-progress-btn').on('click', function () {
                isUserLoggedIn()
                    .then(function () {
                        submitLessonForm();
                    })
                    .catch(function () {
                        showLoginForm();
                    });
            });

            var $authModal = $('#authModal');

            $authModal.on('submit', 'form', function (e) {
                e.preventDefault();
                var $currentForm = $(this);

                $.ajax({
                    url: $(this).attr("action"),
                    data: $(this).serialize(),
                    method: 'post'
                }).then(function () {
                    submitLessonForm();
                }).catch(function (jqXHR) {
                    mapErrorsToForm($currentForm, JSON.parse(jqXHR.responseText));
                });
            });

            $authModal.on('click', '#js-btn-show-register-form', function (e) {
                e.preventDefault();
                showRegistrationForm();
            });

            $authModal.on('click', '#js-btn-show-login-form', function (e) {
                e.preventDefault();
                showLoginForm();
            });

            for (var i = 0; i < 22; i++) {
                var $inputElement = $('#input'+i);
                var $answerElement = $('#answer'+i);
                var $btnCheck = $('#btn-check'+i);

                $inputElement.val($answerElement.html());
                $btnCheck.click();
            }
        });
    </script>
{% endblock %}