{% extends 'layout.html.twig' %}
{% import 'macros/breadcrumb.html.twig' as breadCrumb %}

{% block content %}

{{ breadCrumb.create(category, lesson) }}

<div class="row">
    <form class="col-md-9">
        {% for sentence in lesson.sentences %} {# loop.index starts from 1 #}
            <div class="row">
                <div class="col-xs-2 col-sm-1 col-md-1">
                    <button class="btn btn-default js-btn-play" onclick="toggleAudio({{ loop.index }})" type="button">
                        <i class="glyphicon glyphicon-volume-up"></i>
                    </button>
                    <audio class="hidden" id="audio{{ loop.index }}">
                        <source src="{{ asset('/assets/mp3/'~category.slug~'/'~lesson.position~'/'~loop.index~'.mp3') }}">
                    </audio>
                </div>

                <div class="col-xs-7 col-sm-9 col-md-10">
                    <div class="form-group">
                        <input class="form-control input" id="input{{ loop.index }}" placeholder="{{ loop.index }}." onkeydown="doAction({{ loop.index }}, event)" tabindex="{{ loop.index }}">
                        <p class="text-left hidden" id="answer{{ loop.index }}">{{ sentence }}</p>
                        <p class="text-left result" id="result{{ loop.index }}"></p>
                    </div>
                </div>

                <div class="col-xs-2 col-sm-1 col-md-1">
                    <button class="btn btn-default" id="btn-check{{ loop.index }}" onclick="checkAnswer({{ loop.index }})" type="button">
                        <i class="glyphicon glyphicon-question-sign text-mute"></i>
                    </button>
                </div>
            </div>
        {% endfor %}
    </form>

    <div class="col-md-3">
        <div class="sticky-sidebar-wrapper">
            <div class="row" data-spy="affix" data-offset-top="105">
                <div class="col-sm-6 col-md-12 hidden-lg form-group">
                    <button data-url="{{ path("user_update_progress") }}" id="js-update-progress-btn" class="btn btn-lg btn-success btn-block js-btn-submit" title="Lưu thành tích và chuyển sang bài tiếp theo" {% if not app.user %}data-toggle="modal" data-target="#authModal"{% endif %}>
                        <i class="glyphicon glyphicon-ok" ></i>
                        Hoàn thành
                    </button>
                </div>
                <div class="col-sm-6 col-md-12 form-group">
                    <button data-url="{{ path("user_save_lesson") }}" id="js-save-lesson-btn" class="btn btn-lg btn-default btn-block js-btn-submit" title="Lưu lại trạng thái hiện tại (tối đa 5 bài)" {% if not app.user %}data-toggle="modal" data-target="#authModal"{% endif %}>
                        <i class="glyphicon glyphicon-paperclip"></i>
                        Lưu trạng thái
                    </button>
                </div>
            </div>
        </div>

        {{ breadCrumb.create(category, lesson, 'hidden-md hidden-lg') }}

        <div class="row">
            <div class="col-xs-12">
                <h4>Helpful links</h4>
                <ul>
                    <li><a href="#">Hoc tieng anh</a></li>
                    <li><a href="#">Hoc tieng anh</a></li>
                    <li><a href="#">Hoc tieng anh</a></li>
                    <li><a href="#">Hoc tieng anh</a></li>
                    <li><a href="#">Hoc tieng anh</a></li>
                </ul>
            </div>
        </div>
    </div>
</div>

{{ breadCrumb.create(category, lesson, 'hidden-sm hidden-xs') }}

{% if not app.user %}
    <div id="authModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body hidden" id="js-modal-body-login"></div>
                <div class="modal-body" id="js-modal-body-register"></div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-sm btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
{% endif %}

{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script>
        function submitLessonForm(url) {
            console.log(url);
        }

        function showLoginForm() {
            var $form = $('#js-modal-body-login');

            if ($form.is(':empty')) {
                $.ajax({
                    url: "{{ path('fos_user_security_login') }}"
                }).then(function (data) {
                    $form.html(data);
                });
            }

            toggleAuthForms($form);
        }

        function showRegistrationForm() {
            var $form = $('#js-modal-body-register');

            if ($form.is(':empty')) {
                $.ajax({
                    url: "{{ path('fos_user_registration_register') }}",
                    method: 'get'
                }).then(function (data) {
                    $form.html(data);
                });
            }

            toggleAuthForms($form);
        }

        function toggleAuthForms($form) {
            var $formWrapper = $('#authModal');
            $formWrapper.find('.modal-body').addClass('hidden');

            $form.removeClass('hidden');
        }

        function toggleAudio(index) {
            var audioElements = document.getElementsByTagName('audio');
            var currentAudio = document.getElementById('audio'+index);

            {# if there's another audio playing, stop it. #}
            for (var i = 0; i < audioElements.length; i++) {
                if (audioElements[i] != currentAudio && !audioElements[i].paused) {
                    audioElements[i].pause();
                    break;
                }
            }

            currentAudio.paused ? currentAudio.play() : currentAudio.pause();
        }

        function checkAnswer(index) {
            var $inputElement = $('#input'+index);
            var $answerElement = $('#answer'+index);

            // if the sentence is already done
            if ($inputElement.hasClass('done')) {
                $inputElement.val($answerElement.html());
                return;
            }

            var resultContent = compareAnswers($inputElement, $answerElement);
            var $resultElement = $("#result"+index);

            var $btnCheck = $('#btn-check'+index);

            // if user's answer is not correct
            if (resultContent.indexOf('text-danger') !== -1) {
                $btnCheck.html('<b class="glyphicon glyphicon-remove text-danger"></b>');
                $resultElement.html(resultContent);
            } else {
                $btnCheck.html('<b class="glyphicon glyphicon-ok text-success"></b>');
                $resultElement.html('');
                $inputElement.val($answerElement.html()).addClass('done');
                updateLessonFormSubmitType();
            }
        }
        
        function updateLessonFormSubmitType() {
            {# there are 2 types of submission.
             If user has answered all sentences and they are all correct, we update user's stats (number of words)
             Else, we save the lesson for the user to finish it later. #}

            var $userInputs = $('.input');

            {# hopefully our users wont do the last sentence first :) #}
            for (var i = $userInputs.length - 1; i >= 0; i--) {
                console.dir($userInputs[i].className.indexOf('done'));
                if ($userInputs[i].className.indexOf('done') === -1) {
                    return;
                }
            }

            $('#js-update-progress-btn').closest('.form-group').removeClass('hidden-lg');
            $('#js-save-lesson-btn').closest('.form-group').addClass('hidden-lg');
        }

        function compareAnswers($inputElement, $answerElement) {
            var input = $inputElement.val().trim().toLowerCase().replace(/[^\w\s-]*/g, '').replace(/  /g, ' ').split(" ");
            var answer = $answerElement.html().trim().toLowerCase().replace(/[^\w\s-]*/g, '').replace(/  /g, ' ').split(" ");
            var result = $answerElement.html().split(' '); // the result after comparing input and answer

            for (var i = 0; i < result.length; i++) {
                if (answer[i] != input[i]){
                    result[i] = "<span class='text-danger'>"+result[i]+"</span>";
                }
            }

            if (input.length > answer.length) {
                result[result.length - 1] = "<span class='text-danger'>"+result[result.length - 1]+"</span>";
            }

            return result.join(" ");
        }

        {# toggleAudio() or checkAnswer() or focus to other input or do nothing depends on what keys user pressed #}
        function doAction(index, event) {
            {# Ctrl + Space = toggleAudio() #}
            if (event.ctrlKey && event.keyCode == 32) {
                toggleAudio(index);
            }

            {# Enter = Compare input & answer #}
            else if (event.keyCode == 13) {
                checkAnswer(index);
            }

            {# Ctrl + Enter = Hide result #}
            else if (event.ctrlKey && event.keyCode == 13) {
                document.getElementById('result'+index).style.display = 'none';
            }

           {# Down arrow key = next sentence || Up arrow key = previous sentence #}
            else if (event.keyCode== 40 || event.keyCode==38) {
                var inputs = document.querySelectorAll('[tabindex]');
                var currentInputIndex = document.activeElement.getAttribute('tabindex');

                {# Down arrow key = focus next input #}
                if (event.keyCode == 40) {
                    var nextInput = inputs[currentInputIndex];
                    if(nextInput != undefined) {
                        nextInput.focus();
                    }
                }

                {# Up arrow key = focus previous input #}
                else {
                    var previousInputIndex = parseInt(currentInputIndex)-2;
                    var previousInput = inputs[previousInputIndex];
                    if (previousInput != undefined) {
                        previousInput.focus();
                    }
                }
            }
        }
    </script>

    <script>
        $(document).ready(function(){
            updateLessonFormSubmitType();
            $(".input").focus(function(){
                $("html, body").animate({scrollTop: $(this).offset().top - 100});
            });

            $(".js-btn-submit").on('click', function () {
                var self = $(this);

                $.ajax({
                    url: "{{ path("user_show") }}"
                }).then(function () {
                    submitLessonForm(self.data('url'));
                }).catch(function () {
                    showLoginForm();
                });
            });

            var $authModal = $('#authModal');

            $authModal.on('submit', 'form', function (e) {
                e.preventDefault();
                var currentForm = $(this);

                $.ajax({
                    url: $(this).attr("action"),
                    data: $(this).serialize(),
                    method: "post"
                }).then(function (data) {
                    submitLessonForm();
                }).catch(function (jqXHR) {
                    var response = JSON.parse(jqXHR.responseText);
                    currentForm.find($(".js-modal-form-error")).html("<div class=\"alert alert-danger\">"+response.error+"</div>");
                });
            });

            $authModal.on('click', '#js-btn-show-register-form', function (e) {
                e.preventDefault();
                showRegistrationForm();
            });

            $authModal.on('click', '#js-btn-show-login-form', function (e) {
                e.preventDefault();
                showLoginForm();
            });

//            for (var i = 0; i <22; i++) {
//                var $inputElement = $('#input'+i);
//                var $answerElement = $('#answer'+i);
//                var $btnCheck = $('#btn-check'+i);
//
//                $inputElement.val($answerElement.html());
//                $btnCheck.click();
//            }
        });
    </script>
{% endblock %}